/*
 * 
 */
package com.sqisoft.plantmate.domain;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.List;

import lombok.Data;

/**
 * @author jynius
 */
@Data
public class PlantGrowthFileFilter implements Serializable {

	private static final long serialVersionUID = 3821801131779710937L;

	/**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    public PlantGrowthFileFilter() {
        oredCriteria = new ArrayList<>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andGrowthfileidIsNull() {
            addCriterion("GROWTHFILEID is null");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidIsNotNull() {
            addCriterion("GROWTHFILEID is not null");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidEqualTo(Integer value) {
            addCriterion("GROWTHFILEID =", value, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidNotEqualTo(Integer value) {
            addCriterion("GROWTHFILEID <>", value, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidGreaterThan(Integer value) {
            addCriterion("GROWTHFILEID >", value, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidGreaterThanOrEqualTo(Integer value) {
            addCriterion("GROWTHFILEID >=", value, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidLessThan(Integer value) {
            addCriterion("GROWTHFILEID <", value, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidLessThanOrEqualTo(Integer value) {
            addCriterion("GROWTHFILEID <=", value, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidIn(List<Integer> values) {
            addCriterion("GROWTHFILEID in", values, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidNotIn(List<Integer> values) {
            addCriterion("GROWTHFILEID not in", values, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidBetween(Integer value1, Integer value2) {
            addCriterion("GROWTHFILEID between", value1, value2, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthfileidNotBetween(Integer value1, Integer value2) {
            addCriterion("GROWTHFILEID not between", value1, value2, "growthfileid");
            return (Criteria) this;
        }

        public Criteria andGrowthidIsNull() {
            addCriterion("GROWTHID is null");
            return (Criteria) this;
        }

        public Criteria andGrowthidIsNotNull() {
            addCriterion("GROWTHID is not null");
            return (Criteria) this;
        }

        public Criteria andGrowthidEqualTo(Integer value) {
            addCriterion("GROWTHID =", value, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidNotEqualTo(Integer value) {
            addCriterion("GROWTHID <>", value, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidGreaterThan(Integer value) {
            addCriterion("GROWTHID >", value, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidGreaterThanOrEqualTo(Integer value) {
            addCriterion("GROWTHID >=", value, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidLessThan(Integer value) {
            addCriterion("GROWTHID <", value, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidLessThanOrEqualTo(Integer value) {
            addCriterion("GROWTHID <=", value, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidIn(List<Integer> values) {
            addCriterion("GROWTHID in", values, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidNotIn(List<Integer> values) {
            addCriterion("GROWTHID not in", values, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidBetween(Integer value1, Integer value2) {
            addCriterion("GROWTHID between", value1, value2, "growthid");
            return (Criteria) this;
        }

        public Criteria andGrowthidNotBetween(Integer value1, Integer value2) {
            addCriterion("GROWTHID not between", value1, value2, "growthid");
            return (Criteria) this;
        }

        public Criteria andFileidIsNull() {
            addCriterion("FILEID is null");
            return (Criteria) this;
        }

        public Criteria andFileidIsNotNull() {
            addCriterion("FILEID is not null");
            return (Criteria) this;
        }

        public Criteria andFileidEqualTo(Integer value) {
            addCriterion("FILEID =", value, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidNotEqualTo(Integer value) {
            addCriterion("FILEID <>", value, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidGreaterThan(Integer value) {
            addCriterion("FILEID >", value, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidGreaterThanOrEqualTo(Integer value) {
            addCriterion("FILEID >=", value, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidLessThan(Integer value) {
            addCriterion("FILEID <", value, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidLessThanOrEqualTo(Integer value) {
            addCriterion("FILEID <=", value, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidIn(List<Integer> values) {
            addCriterion("FILEID in", values, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidNotIn(List<Integer> values) {
            addCriterion("FILEID not in", values, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidBetween(Integer value1, Integer value2) {
            addCriterion("FILEID between", value1, value2, "fileid");
            return (Criteria) this;
        }

        public Criteria andFileidNotBetween(Integer value1, Integer value2) {
            addCriterion("FILEID not between", value1, value2, "fileid");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {
        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table tb_plant_growth_file
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}